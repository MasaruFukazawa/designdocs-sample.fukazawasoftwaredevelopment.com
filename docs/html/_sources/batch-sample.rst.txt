バッチ処理仕様書 - ユーザー情報同期バッチ
==========================================

.. contents:: 目次
   :depth: 2
   :local:

基本情報
--------

- **バッチ名**: ユーザー情報同期バッチ
- **処理ID**: BATCH_USER_SYNC
- **処理タイプ**: 定期バッチ（cron）
- **実行タイミング**: 毎日 03:00
- **実行方式**: シェル + Pythonスクリプト（EC2上で cron 実行）

処理概要
--------

社内ユーザー管理DBと外部CRMとの間で、ユーザー情報の差分を同期する。  
外部APIを呼び出し、ユーザー一覧を取得し、更新対象レコードを自社DBに反映する。

前提条件
--------

- 外部CRM APIに事前にアクセストークンを取得していること
- ネットワーク疎通があること（VPN接続中）

入力情報
--------

- **データソース**: 外部CRM API（`GET /users`）
- **認証方式**: Bearer Token
- **フィルタ条件**: 前回同期時刻以降の更新ユーザー

出力情報
--------

- **出力先**: 自社ユーザーマスタ（PostgreSQL: `user_master` テーブル）
- **更新方式**: `user_id` をキーに `INSERT` or `UPDATE`
- **ロギング**: `/var/log/batch/user_sync.log`

処理詳細
--------

1. 前回実行時刻を取得（DBまたはファイルから）
2. 外部APIからユーザー一覧を取得
3. 各ユーザーを照合し、差分がある場合はINSERT or UPDATE
4. 処理件数、エラー件数をログに出力
5. 正常終了・異常終了をメール通知

例外・エラー処理
----------------

- API通信失敗 → リトライ3回、失敗時はアラートメール送信
- DB更新失敗 → 該当レコードをスキップ、ログ出力
- 不正データ → ログ出力＆スキップ

スケジュール設定（例: cron）
----------------------------

... code-block:: bash
   # ユーザー情報同期バッチ
   0 3 * * * /opt/batch/user_sync.sh
